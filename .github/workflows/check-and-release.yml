name: Check and Release

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:

env:
  REGISTRY: ghcr.io

permissions:
  contents: write
  packages: write

jobs:
  build-backend:
    timeout-minutes: 15
    env:
      IMAGE_NAME: deepspace1000/learnup-backend
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./backend

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21.0.2'
          distribution: 'temurin'

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          dependency-graph: generate-and-submit

      - name: Build backend
        run: ./gradlew build

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}
          tags: |
            type=sha,
            type=ref,event=tag

      - name: Docker Login
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: backend
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-frontend:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: deepspace1000/learnup-frontend
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install yarn dependencies
        run: yarn install

      - name: Lint check frontend
        run: yarn lint:check

      - name: Format check frontend
        run: yarn format:check

      - name: Build frontend
        run: yarn build

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}
          tags: |
            type=sha,
            type=ref,event=tag

      - name: Docker Login
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: frontend
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
